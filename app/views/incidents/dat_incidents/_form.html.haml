= semantic_form_for resource, url: form_url, builder: FormtasticBootstrap::FormBuilder, html: {class: 'form-horizontal'} do |f|
  .row
    .span12
      =f.semantic_errors
  .row
    .span6
      =f.inputs "Basic" do
        - readonly = resource.incident && !resource.incident.new_record?
        =f.semantic_fields_for :incident do |f|
          =f.semantic_errors
          =f.input :incident_number, input_html: {readonly: readonly}
          =f.input :county, as: (readonly ? :string : :select), input_html: {readonly: readonly, value: resource.incident.try(:county).try(:name)}
          =f.input :date, as: (readonly ? :string : :bootstrap_date), input_html: {readonly: readonly}
        /=f.input :incident_number, placeholder: "#{Date.today.strftime "%y"}-123"
        /=f.input :county, include_blank: false, collection: Roster::County.where{name != 'Chapter'}
        /=f.input :date, as: :bootstrap_date
        =f.input :incident_type, as: :select, collection: {"Fire" => 'fire', 'Police Action' => 'police', 'Flood' => 'flood'}, include_blank: false
        =f.input :incident_call_type, as: :select, collection: {"Hot" => 'hot', "Cold" => 'cold'}, include_blank: false
        =f.semantic_fields_for :incident do |f|
          =f.semantic_fields_for :team_lead do |f|
            =f.semantic_errors
            =f.input :person, as: :person_typeahead, text_value: lambda{|obj| Roster::Person.where(id: obj.person_id).first.try(:full_name)}, label: "Team Lead"
            =f.input :role, as: :hidden, input_html: {value: "team_lead"}
            =f.input :response, as: :hidden, input_html: {value: "available"}
        .control-group
          %label.control-label Completed By
          .controls
            =current_user.full_name
    .span6
      =f.inputs "Demographics" do
        =f.input :num_adults
        =f.input :num_children
        =f.input :num_families
        /=f.input :num_cases
        =f.input :units_total
  
  =f.inputs "Location" do
    .row
      %br
      .span6
        =f.input :search_for_address
        =f.input :cross_street
        =f.input :address, input_html: {readonly: true}
        =f.input :city, input_html: {readonly: true}
        =f.input :state, default: 'CA', input_html: {readonly: true}
        =f.input :zip, input_html: {readonly: true}
        =f.input :lat, as: :hidden, input_html: {readonly: true}
        =f.input :lng, as: :hidden, input_html: {readonly: true}
        =f.input :neighborhood, input_html: {readonly: true}
      .span6
        .incident-map{style: "height: 300px"}

  .row
    .span6
      =f.inputs "Narrative" do
        =f.input :narrative, label: 'Narrative:', input_html: {rows: 6, style: "width: 100%"}
    .span6
      =f.inputs "Services" do
        - services = resource.services || []
        .control-group
          %label.control-label Financial Assistance
          .controls
            - {"Emergency Housing" => 'housing', 'Food' => 'food', 'Clothing' => 'clothing', 'Medication' => 'medication'}.each do |label, val|
              %label.checkbox
                =check_box_tag "incidents_dat_incident[services][]", val, services.include?( val)
                =label
        .control-group
          %label.control-label Other Assistance
          .controls
            - {"Opened Evac Center" => 'evac_center', 'Comfort Kits' => 'comfort_kits', "Canteened Responders" => 'canteened_responders'}.each do |label, val|
              %label.checkbox
                =check_box_tag "incidents_dat_incident[services][]", val, services.include?( val)
                =label
  -#.row
  -#  .span12
  -#    %h3
  -#      Optional Data
  -#      %a.btn.btn-primary(data-toggle="collapse" data-target="#extra-dat") Show
  #extra-dat
    .row
      .span6
        =f.inputs "Damage Assessment" do
          /=f.input :units_total
          =f.input :units_affected
          =f.input :units_minor
          =f.input :units_major
          =f.input :units_destroyed
      .span6
        =f.inputs "Clients" do
          =f.input :num_people_injured
          =f.input :num_people_hospitalized
          =f.input :num_people_deceased
        =f.inputs "Timeline" do
          =f.input :responder_notified, as: :string
          =f.input :responder_arrived, as: :string
          =f.input :responder_departed, as: :string
    .row
      .span12
        =f.inputs "Responders" do
          =f.semantic_fields_for :incident do |f|
            %table.table.form-table#responder-table
              %thead
                %tr
                  %th Name
                  %th Flex
                  %th Role
                  %th Response
                  %th Actions
              %tbody
                %tr
                  %td.team-lead-name=resource.incident.try(:team_lead).try(:person).try :full_name
                  %td
                  %td Team Lead
                  %td Available
                  %td
                =f.semantic_fields_for :responder_assignments do |r|
                  =render 'responder_assignment_fields', f: r
              %tfoot
                %tr
                  %th(colspan=4)
                    %h4 Responders On Call:
                %tr
                  %th Name
                  %th Shift Position
                - (sched = scheduled_responders).each do |shift|
                  %tr
                    %td=shift.person.full_name
                    %td=shift.shift.name
                    %td=link_to_add_association 'Add Responder', f, :responder_assignments, "data-association-insertion-node" => "#responder-table tbody", "data-association-insertion-method" => "append", class: "btn btn-primary", wrap_object: ->(assoc){assoc.person = shift.person; assoc}
                - flex_responders(resource, sched).each do |flex|
                  %tr
                    %td=flex.person.full_name
                    %td Flex
                    %td=link_to_add_association 'Add Responder', f, :responder_assignments, "data-association-insertion-node" => "#responder-table tbody", "data-association-insertion-method" => "append", class: "btn btn-primary", wrap_object: ->(assoc){assoc.person = flex.person; assoc.was_flex = true; assoc}

            =link_to_add_association 'Add Other Responder', f, :responder_assignments, "data-association-insertion-node" => "#responder-table tbody", "data-association-insertion-method" => "append", class: "btn btn-primary"
  =f.actions :submit, label: 'Submit Incident Report'

- content_for :footer_js do
  = javascript_include_tag "https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false"
  :javascript
    incidentLocationController = new IncidentLocationController(#{resource.lat.to_json}, #{resource.lng.to_json})